"""
Django settings for my_site project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from decouple import config
from pathlib import Path
import os


BACKEND_ADDRESS = "192.168.0.208"
FRONTEND_ADDRESS = "192.168.0.10"

BACKEND_URL = "http://" + BACKEND_ADDRESS + ":8000"
FRONTEND_URL = "http://" + FRONTEND_ADDRESS + ":190000"


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# BASE_URL = "http://127.0.0.1:8000"
BASE_URL = BACKEND_URL
# Media files (uploads) settings
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # 프로젝트 루트에 'media/' 디렉토리 설정

# Private media files settings
PRIVATE_MEDIA_ROOT = os.path.join(BASE_DIR, 'private_media')  # 프로젝트 루트에 'private_media/' 디렉토리 설정
PRIVATE_MEDIA_URL = '/private_media/'  # 이 URL은 직접 사용되지 않고, 커스텀 뷰를 통해서만 접근합니다.

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-yvjkz7$a2h)4f(dk1euqypf31atbd^ce9s6x2!+&m=$zxkn%9^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [FRONTEND_ADDRESS, BACKEND_ADDRESS, ]


# Application definition

INSTALLED_APPS = [
    # Channels 관련 앱
    'daphne',
    'channels',

    # Django 기본 앱
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    
    # CORS 헤더 설정
    'corsheaders',

    # Django REST framework 및 관련 인증 앱
    'rest_framework',
    'rest_framework.authtoken',
    
    # django-allauth와 관련 앱
    'django.contrib.sites',
    'allauth',
    'allauth.account',

    # 커스텀 앱
    'my_app.apps.MyAppConfig',
    'my_auth.apps.MyAuthConfig',
    'chat',
    'matching',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', # CORS 미들웨어 추가
    'allauth.account.middleware.AccountMiddleware',  # django-allauth middleware 추가

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    

]

ROOT_URLCONF = 'my_site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'my_site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Change the default user model to the custom user model
AUTH_USER_MODEL = 'my_app.CustomUser'

# 필수 설정
SITE_ID = 1  # 사용하는 사이트의 ID 설정

# 이메일 인증과 관련된 설정
ACCOUNT_AUTHENTICATION_METHOD = 'email'  # 이메일로 로그인하도록 설정
LOGIN_REDIRECT_URL = '/'  # 로그인 후 리디렉션할 URL

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

EMAIL_HOST = 'smtp.naver.com'  # 이메일 호스트 설정
EMAIL_PORT = 587 # 이메일 포트 설정
EMAIL_USE_TLS = True # TLS 설정
EMAIL_HOST_USER = 'dev-jaehunshin@naver.com'
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')  # 환경 변수에서 비밀번호 읽기
DEFAULT_FROM_EMAIL = 'dev-jaehunshin@naver.com'

ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 1  # 이메일 인증 메일의 유효 기간 설정 (일 단위)
ACCOUNT_EMAIL_SUBJECT_PREFIX = '[ BLUEBERRY 이메일 인증 ]'  # 이메일 제목에 붙는 접두사 설정
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'  # 이메일 인증을 필수로 설정
# ACCOUNT_EMAIL_VERIFICATION = 'optional'  # 이메일 인증을 선택사항으로 설정
ACCOUNT_EMAIL_REQUIRED = True  # 이메일을 필수로 입력하게 설정

# 1. 인증되지 않은 사용자는 이메일 인증 후 로그인 페이지로 리디렉션
ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = '/accounts/login/'

# 2. 인증된 사용자는 이메일 인증 후 최종 리디렉션 페이지로 이동
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = '/my_app/home/'

ACCOUNT_SIGNUP_REDIRECT_URL = '/my_app/home/'  # 회원가입 후 리디렉션할 URL 설정

# 3. 로그인 후 최종 리디렉션 URL 설정
from django.urls import reverse_lazy

# 4. 로그인 URL 설정
LOGIN_URL = reverse_lazy('my_auth:landing_page') 

# django-allauth에서 사용할 폼을 커스텀 폼으로 설정
ACCOUNT_FORMS = {
    'signup': 'my_auth.forms.CustomSignupForm',
}




# CORS 설정
# CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    FRONTEND_URL,
    BACKEND_URL,
]

CSRF_TRUSTED_ORIGINS = [
    FRONTEND_URL,
    BACKEND_URL,
]

# REST framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}





#채널 레이어
# Daphne
ASGI_APPLICATION = "my_site.asgi.application"
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("127.0.0.1", 6379)],
        },
    },
}
